name: Integration Tests
on:
  workflow_call:
    inputs:
      filter:
        description: Filter to apply when running tests
        required: true
        type: string

      solution:
        description: Solution containing test projects
        required: false
        type: string

jobs:
  ecr:
    name: ECR
    runs-on: ubuntu-latest
    outputs:
      ecrpw: ${{ steps.getpw.outputs.ecrpw }}
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        id: setup
        with:
          aws-access-key-id: secrets.BUILD_AWS_ACCESS_KEY_ID
          aws-secret-access-key: secrets.BUILD_AWS_SECRET_ACCESS_KEY
          aws-region: us-east-1
          role-to-assume: secrets.DEV_BUILD_ROLE

      - name: ECR Generate Password
        id: getpw
        shell: bash
        run: |
          set -eo pipefail
          ECR_PW=$(aws ecr get-login-password)
          echo "ecrpw=$ECR_PW" >> $GITHUB_OUTPUT

  run:
    name: Run
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_USERNAME: GitHub
    needs: [ecr]
    services:
      ofi-sql:
        image: 221675528805.dkr.ecr.us-east-1.amazonaws.com/db:dev-test
        ports:
          - 1433:1433
        credentials:
          username: AWS
          password: ${{ needs.ecr.outputs.ecrpw }}
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11.0.16

      - uses: actions/checkout@v3

      - name: Cache SonarCloud Packages
        uses: actions/cache@v3
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud Scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          New-Item -Path ./.sonar/scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Start Sonar Scanner
        shell: pwsh
        run: |
          $key = "${{ github.repository }}".Replace("/", "_")

          .\.sonar\scanner\dotnet-sonarscanner begin `
            /o:orthofi `
            /k:$key `
            /d:sonar.host.url=https://sonarcloud.io `
            /d:sonar.cs.opencover.reportsPaths=artifacts/**/*.xml `
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Test
        shell: pwsh
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet test ${{ inputs.solution }} -v q -c Release --nologo --filter ${{ inputs.filter }} --results-directory artifacts --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

      - name: Stop Sonar Scanner
        shell: pwsh
        if: always()
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end `
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
